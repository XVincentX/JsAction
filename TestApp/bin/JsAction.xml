<?xml version="1.0"?>
<doc>
    <assembly>
        <name>JsAction</name>
    </assembly>
    <members>
        <member name="T:JsAction.JsActionHelperExtension">
            <summary>
            JsAction Helper extension
            </summary>
        </member>
        <member name="M:JsAction.JsActionHelperExtension.JsScript(System.Web.Mvc.HtmlHelper,System.String[])">
            <summary>
            Writes into view the needed script reference for JsAction.
            </summary>
            <param name="helper">static html helper</param>
            <param name="Groups">Groups name to import</param>
            <returns>Html String that represents script reference</returns>
        </member>
        <member name="T:JsAction.JsActionAttribute">
            <summary>
            JsActionAttribute can be used to mark Action Method and generate related Javascript
            </summary>
        </member>
        <member name="M:JsAction.JsActionAttribute.#ctor">
            <summary>
            Object .ctor
            </summary>
        </member>
        <member name="M:JsAction.JsActionAttribute.JsVariableConventionMatching(System.String)">
            <summary>
            Method to check compliance with standard JS variable convention
            </summary>
            <param name="value">Value to validate</param>
            <returns>Bool value, if valid or not.</returns>
        </member>
        <member name="F:JsAction.JsActionAttribute._methodname">
            <summary>
            Internal method name string
            </summary>
        </member>
        <member name="P:JsAction.JsActionAttribute.MethodName">
            <summary>
            Gets or sets Javascript function name to generate. If null, Action name will be used.
            </summary>
        </member>
        <member name="P:JsAction.JsActionAttribute.Verb">
            <summary>
            Gets or sets Http Verb to use in Ajax request. Must be specified if multiple Verbs are accepted for same Action Method.
            </summary>
        </member>
        <member name="P:JsAction.JsActionAttribute.Groups">
            <summary>
            Gets or sets group names for function, separated by comma values
            </summary>
        </member>
        <member name="P:JsAction.JsActionAttribute.CacheRequest">
            <summary>
            Gets or sets if cache option parameter should be set.
            </summary>
        </member>
        <member name="P:JsAction.JsActionAttribute.Async">
            <summary>
            Gets or sets if request should be async or not.
            </summary>
        </member>
        <member name="T:JsAction.HttpSingleVerb">
            <summary>
            Enumeration that rapresents supported HttpVerbs for JsAction library
            </summary>
        </member>
        <member name="F:JsAction.HttpSingleVerb.None">
            <summary>
            No HttpVerb has been selected
            </summary>
        </member>
        <member name="F:JsAction.HttpSingleVerb.HttpGet">
            <summary>
            GET Http verb
            </summary>
        </member>
        <member name="F:JsAction.HttpSingleVerb.HttpPost">
            <summary>
            POST Http  verb
            </summary>
        </member>
        <member name="T:JsAction.JsActionRouteHandlerInstance">
            <summary>
            Static class with singleton instance
            </summary>
        </member>
        <member name="F:JsAction.JsActionRouteHandlerInstance.JsActionRoute">
            <summary>
            Static singleton Route to add
            </summary>
        </member>
        <member name="T:JsAction.ext.DocsByReflection">
            <summary>
            Utility class to provide documentation for various types where available with the assembly
            </summary>
        </member>
        <member name="M:JsAction.ext.DocsByReflection.XMLFromMember(System.Reflection.MethodInfo)">
            <summary>
            Provides the documentation comments for a specific method
            </summary>
            <param name="methodInfo">The MethodInfo (reflection data ) of the member to find documentation for</param>
            <returns>The XML fragment describing the method</returns>
        </member>
        <member name="M:JsAction.ext.DocsByReflection.XMLFromMember(System.Reflection.MemberInfo)">
            <summary>
            Provides the documentation comments for a specific member
            </summary>
            <param name="memberInfo">The MemberInfo (reflection data) or the member to find documentation for</param>
            <returns>The XML fragment describing the member</returns>
        </member>
        <member name="M:JsAction.ext.DocsByReflection.XMLFromType(System.Type)">
            <summary>
            Provides the documentation comments for a specific type
            </summary>
            <param name="type">Type to find the documentation for</param>
            <returns>The XML fragment that describes the type</returns>
        </member>
        <member name="M:JsAction.ext.DocsByReflection.XMLFromName(System.Type,System.Char,System.String)">
            <summary>
            Obtains the XML Element that describes a reflection element by searching the 
            members for a member that has a name that describes the element.
            </summary>
            <param name="type">The type or parent type, used to fetch the assembly</param>
            <param name="prefix">The prefix as seen in the name attribute in the documentation XML</param>
            <param name="name">Where relevant, the full name qualifier for the element</param>
            <returns>The member that has a name that describes the specified reflection element</returns>
        </member>
        <member name="F:JsAction.ext.DocsByReflection.cache">
            <summary>
            A cache used to remember Xml documentation for assemblies
            </summary>
        </member>
        <member name="F:JsAction.ext.DocsByReflection.failCache">
            <summary>
            A cache used to store failure exceptions for assembly lookups
            </summary>
        </member>
        <member name="M:JsAction.ext.DocsByReflection.XMLFromAssembly(System.Reflection.Assembly)">
            <summary>
            Obtains the documentation file for the specified assembly
            </summary>
            <param name="assembly">The assembly to find the XML document for</param>
            <returns>The XML document</returns>
            <remarks>This version uses a cache to preserve the assemblies, so that 
            the XML file is not loaded and parsed on every single lookup</remarks>
        </member>
        <member name="M:JsAction.ext.DocsByReflection.XMLFromAssemblyNonCached(System.Reflection.Assembly)">
            <summary>
            Loads and parses the documentation file for the specified assembly
            </summary>
            <param name="assembly">The assembly to find the XML document for</param>
            <returns>The XML document</returns>
        </member>
        <member name="T:JsAction.ext.DocsByReflectionException">
            <summary>
            An exception thrown by the DocsByReflection library
            </summary>
        </member>
        <member name="M:JsAction.ext.DocsByReflectionException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new exception instance with the specified
            error message and a reference to the inner exception that is the cause of
            this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception, or null if none.</param>
        </member>
        <member name="T:JsAction.JsActionHandler">
            <summary>
            Http and Route handler for javascript file generation
            </summary>
        </member>
        <member name="M:JsAction.JsActionHandler.#ctor(System.Reflection.Assembly[])">
            <summary>
            Costructs a new hanlder for JsAction requests
            </summary>
            <param name="Asm">Optional assembly array in which search for JsAction attribute. If null is specified, only current one will be taken in consideration.</param>
        </member>
        <member name="M:JsAction.JsActionHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Processes the request
            </summary>
            <param name="context">context</param>
        </member>
        <member name="M:JsAction.JsActionHandler.ComplexTypeDecomposition(System.Text.StringBuilder)">
            <summary>
            Stub. Complex type decomposition for better intellisense
            </summary>
            <param name="js">js stringBuilder</param>
        </member>
        <member name="M:JsAction.JsActionHandler.DocumentateTheFunction(System.Text.StringBuilder,System.Reflection.MethodInfo)">
            <summary>
            Generates documentation for current method
            </summary>
            <param name="js">js Stringbuilder</param>
            <param name="method">Method to analyze</param>
        </member>
        <member name="M:JsAction.JsActionHandler.GetHttpHandler(System.Web.Routing.RequestContext)">
            <summary>
            Gets http handler to manage request
            </summary>
            <param name="requestContext">request context</param>
            <returns>HttpHandler</returns>
        </member>
        <member name="P:JsAction.JsActionHandler.IsReusable">
            <summary>
            Is the request reusable?
            </summary>
        </member>
    </members>
</doc>
